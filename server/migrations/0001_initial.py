# Generated by Django 5.1.4 on 2025-04-07 14:07

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import mptt.fields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='PopularSearch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.CharField(max_length=255, unique=True)),
                ('count', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Popular Search',
                'verbose_name_plural': 'Popular Searches',
            },
        ),
        migrations.CreateModel(
            name='PostTags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
            ],
            options={
                'verbose_name': 'Post Tag',
                'verbose_name_plural': 'Post Tags',
            },
        ),
        migrations.CreateModel(
            name='Customers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('bio', models.TextField(max_length=400, verbose_name='user description')),
                ('first_name', models.CharField(max_length=45, verbose_name='first name')),
                ('last_name', models.CharField(max_length=45, verbose_name='last name')),
                ('city', models.CharField(max_length=45, verbose_name='user city')),
                ('zip_code', models.CharField(max_length=45, verbose_name='zip code')),
                ('street', models.CharField(max_length=45, verbose_name='user street')),
                ('location', django_countries.fields.CountryField(blank=True, max_length=2, null=True, verbose_name='user country')),
                ('house_number', models.PositiveIntegerField(default=0, help_text='Enter a positive integer for the house number', validators=[django.core.validators.MinValueValidator(1)], verbose_name='house number')),
                ('image', models.ImageField(blank=True, null=True, upload_to='user/images/%Y/%m/%d/', verbose_name='user image')),
                ('phone', models.CharField(blank=True, max_length=15, null=True, unique=True, verbose_name='user phone number')),
                ('role', models.CharField(choices=[('user', 'Пользователь'), ('subscriber', 'Подписчик'), ('admin', 'Администратор'), ('moderator', 'Модератор')], default='user', max_length=10)),
                ('is_author', models.BooleanField(default=False, verbose_name='author')),
                ('is_subscriber', models.BooleanField(default=False, verbose_name='subscriber')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='creation date')),
                ('title', models.CharField(max_length=75, verbose_name='title')),
                ('metaTitle', models.CharField(max_length=100, verbose_name='meta title')),
                ('slug', models.SlugField(blank=True, help_text='Unique tag ID for URL', max_length=150, unique=True, verbose_name='slug')),
                ('image', models.ImageField(upload_to='banners/', verbose_name='Image')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Banner',
                'verbose_name_plural': 'Banners',
            },
        ),
        migrations.CreateModel(
            name='BannerProxy',
            fields=[
            ],
            options={
                'ordering': ['-created_at'],
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('server.banner',),
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='creation date')),
                ('title', models.CharField(max_length=75, verbose_name='title')),
                ('metaTitle', models.CharField(max_length=100, verbose_name='meta title')),
                ('slug', models.SlugField(blank=True, help_text='Unique tag ID for URL', max_length=150, unique=True, verbose_name='slug')),
                ('icon', models.CharField(blank=True, default='HelpCircle', max_length=20)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='server.category', verbose_name='parent')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='GenerateCodeConfirmationEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='creation date')),
                ('code', models.CharField(help_text='A 6-digit confirmation code', max_length=6, verbose_name='Confirmation Code')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Uuid CODE')),
                ('expiry_time', models.DateTimeField(verbose_name='Expiry Time')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Generate Code',
                'verbose_name_plural': 'Generate Codes',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='creation date')),
                ('title', models.CharField(max_length=75, verbose_name='title')),
                ('metaTitle', models.CharField(max_length=100, verbose_name='meta title')),
                ('slug', models.SlugField(blank=True, help_text='Unique tag ID for URL', max_length=150, unique=True, verbose_name='slug')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated date')),
                ('summary', models.CharField(blank=True, max_length=30, null=True, verbose_name='product summary')),
                ('accessibility', models.CharField(choices=[('available', 'Доступен'), ('out_of_stock', 'Нет в наличии'), ('coming_soon', 'Скоро в продаже'), ('pre_order', 'Предзаказ')], default='coming_soon', max_length=30, verbose_name='product accessibility')),
                ('condition', models.CharField(choices=[('new', 'Новый'), ('used', 'Б/У'), ('refurbished', 'Восстановленный'), ('damaged', 'Поврежден')], default='new', max_length=30, verbose_name='product condition')),
                ('warehouse', models.CharField(choices=[('reserved', 'Зарезервирован'), ('in_warehouse', 'На складе'), ('out_for_delivery', 'Отправлен на доставку')], default='in_warehouse', max_length=30, verbose_name='product warehouse')),
                ('promotional', models.CharField(choices=[('on_sale', 'Акция'), ('limited_offer', 'Ограниченное предложение'), ('flash_sale', 'Молниеносная распродажа'), ('black_friday', 'Черная пятница')], default='on_sale', max_length=30, verbose_name='product promotional')),
                ('checks', models.CharField(choices=[('under_review', 'На проверке'), ('approved', 'Одобрен'), ('rejected', 'Отклонен')], default='under_review', max_length=30, verbose_name='product checks')),
                ('price', models.DecimalField(decimal_places=2, default=99.99, max_digits=10, verbose_name='product price')),
                ('discount', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='product discount (%)')),
                ('price_discount', models.DecimalField(decimal_places=2, default=99.99, max_digits=10, verbose_name='product price discount')),
                ('banner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='server.banner', verbose_name='product banner')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='server.category', verbose_name='product category')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='product user')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='creation date')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated date')),
                ('image', models.ImageField(blank=True, null=True, upload_to='product/images/%Y/%m/%d/', verbose_name='Product Image')),
                ('is_main', models.BooleanField(default=False, verbose_name='Is main')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='server.product', verbose_name='Product')),
            ],
            options={
                'verbose_name': 'Product Image',
                'verbose_name_plural': 'Product Images',
            },
        ),
        migrations.AddIndex(
            model_name='banner',
            index=models.Index(fields=['title', 'metaTitle'], name='server_bann_title_14a198_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['title', 'metaTitle'], name='server_prod_title_b615f7_idx'),
        ),
    ]
